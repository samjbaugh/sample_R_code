mydata<-read.table("C:/Users/samjb/Desktop/Stat 261/Final Project/data.txt", header=TRUE, row.names="Year")
altdat=c()
wint=mydata$"DJF"[-1]
spring=mydata$"MAM"[-358]
summ=mydata$"JJA"[-358]
fall=mydata$"SON"[-358]
altdat=c()
for(i in (1:358))
{
if(i!=1)
{
altdat=c(altdat,mydata$"DJF"[i])
}
if(i!=358)
{
altdat=c(altdat,mydata$"MAM"[i])
altdat=c(altdat,mydata$"JJA"[i])
altdat=c(altdat,mydata$"SON"[i])
}
}
#Idea 1
plot(diff(altdat),type="l")
plot(diff(mydata$"DJF"[-1]),type="l")
plot(diff(mydata$"MAM"[-358]),type="l")
plot(diff(mydata$"JJA"[-358]),type="l")
plot(diff(diff(mydata$"SON"[-358])),type="l")
avcumsum <- function(season){
sum=season[1]
avcumsum=c()
for(i in (2:357))
{
sum=sum+season[i]
avcumsum=c(avcumsum,sum/i)
}
return(avcumsum)
}
season=wint
plot(avcumsum(season),type="l")
fit=lm(avcumsum(season)~years)
abline(fit$coefficients[1],fit$coefficients[2])
mydata<-read.table("C:/Users/samjb/Desktop/Stat 261/Final Project/data.txt", header=TRUE, row.names="Year")
mydata<-read.table("C:/Users/samjb/Desktop/Stat 261/Final Project/data.txt", header=TRUE, row.names="Year")
mydata<-read.table("./data.txt", header=TRUE, row.names="Year")
altdat=c()
wint=mydata$"DJF"[-1]
spring=mydata$"MAM"[-358]
summ=mydata$"JJA"[-358]
fall=mydata$"SON"[-358]
altdat=c()
for(i in (1:358))
{
if(i!=1)
{
altdat=c(altdat,mydata$"DJF"[i])
}
if(i!=358)
{
altdat=c(altdat,mydata$"MAM"[i])
altdat=c(altdat,mydata$"JJA"[i])
altdat=c(altdat,mydata$"SON"[i])
}
}
#Idea 1
plot(diff(altdat),type="l")
plot(diff(mydata$"DJF"[-1]),type="l")
plot(diff(mydata$"MAM"[-358]),type="l")
plot(diff(mydata$"JJA"[-358]),type="l")
plot(diff(diff(mydata$"SON"[-358])),type="l")
avcumsum <- function(season){
sum=season[1]
avcumsum=c()
for(i in (2:357))
{
sum=sum+season[i]
avcumsum=c(avcumsum,sum/i)
}
return(avcumsum)
}
season=wint
plot(avcumsum(season),type="l")
fit=lm(avcumsum(season)~years)
abline(fit$coefficients[1],fit$coefficients[2])
#Chapter 1: Visualizing Data (Symmetric Moving Average)
years=c(1:358)+1658
seasons=c()
for(i in (4:1432))
{
seasons=c(seasons,floor(years[floor(i/4)]))
}
seasons=seasons[-1]
par(mfrow=c(1,1))
plot(seasons,altdat,type="l",xlab="Year",ylab="Degrees Celcius")
v=filter(rowMeans(mydata)[-1][-357],sides=2,filter=rep(1/25,25))
plot(years[-1][-357],v,type="l",xlab="Year",ylab="Degrees Celcius",main="Symmetric Moving Average: All Seasons")
abline(v=1726)
abline(v=1975)
par(mfrow=c(2,2))
v=filter(wint,sides=2,filter=rep(1/25,25))
plot(years[-1],v,type="l",xlab="Year",ylab="Degrees Celcius",main="Symmetric Moving Average: Winter")
v=filter(spring,sides=2,filter=rep(1/25,25))
plot(years[-358],v,type="l",xlab="year",ylab="Degrees Celcius",main="Symmetric Moving Average: Spring")
v=filter(summ,sides=2,filter=rep(1/25,25))
plot(years[-358],v,type="l",xlab="year",ylab="Degrees Celcius",main="Symmetric Moving Average: Summer")
v=filter(fall,sides=2,filter=rep(1/25,25))
plot(years[-358],v,type="l",xlab="year",ylab="Degrees Celcius",main="Symmetric Moving Average: Fall")
plot.ts(years[-1][-357],rowMeans(mydata),main="Temperature Data",xlab="Year",ylab="Degrees Celcius",type="l")
par(mfrow=c(2,2))
plot.ts(years[-1],wint,main="Temperature Data (Winter)",xlab="Year",ylab="Degrees Celcius",type="l")
plot.ts(years[-357],spring,main="Temperature Data (Spring)",xlab="Year",ylab="Degrees Celcius",type="l")
plot.ts(years[-357],summ,main="Temperature Data (Summer)",xlab="Year",ylab="Degrees Celcius",type="l")
plot.ts(years[-357],fall,main="Temperature Data (Fall)",xlab="Year",ylab="Degrees Celcius",type="l")
#Part 2: Basic Models
summary(fit <- lm(temp_data~years[-1][-357]))
plot(years[-1][-357],resid(fit),type="l",xlab="Year",ylab="Degrees Celcius",main="Detrended Temperatures")
v=filter(rowMeans(mydata),sides=2,filter=rep(1/25,25))
plot(years[-1][-357],v,type="l",xlab="Year",ylab="Degrees Celcius",main="Symmetric Moving Average: All Seasons")
abline(fit)
par(mfrow=c(1,3))
acf(rowMeans(mydata),main="Data ACF")
acf(diff(rowMeans(mydata)),main="Differenced Data ACF")
acf(resid(fit),main="Detrended ACF")
plot(years[-1][-357][-356],diff(rowMeans(mydata)),type="l",xlab="Year",ylab="Degrees Celcius",main="Differenced Temperature Data")
plot(soi)
lines(ksmooth(time(soi), soi, "normal", bandwidth=1), lwd=2, col=4)
#Kernel Smoother
plot(years,rowMeans(mydata,na.rm=TRUE),type="l",xlab="Year",ylab="Degrees Celcius",main="Temperature Data: Kernel Smoother")
lines(ksmooth(years, rowMeans(mydata), "normal", bandwidth=5), lwd=2, col=4)
#Lowess Smoother
plot(years,rowMeans(mydata,na.rm=TRUE),type="l",xlab="Year",ylab="Degrees Celcius",main="Temperature Data: Lowess Smoother")
lines(lowess(years,rowMeans(mydata),f=1/20),lwd=2,col=2)
diff1=diff(temp_data)
par(mfrow=c(1,3))
plot(diff1,type="l",main="Series diff1",ylab="Delta Degrees Celcius")
acf(diff1,lag="100")
pacf(diff1,lag="100")
diff2=diff(overall,differences=2)
par(mfrow=c(1,3))
plot(diff2,type="l")
acf(diff2,lag="100")
pacf(diff2,lag="100")
#Fitting an MA(2) model
model1=sarima(temp_data,0,1,2)
#Unit Root Testing
adf.test(diff1, k=0) # DF test
adf.test(diff1) # ADF test
pp.test(diff1)
phi0=-0.006258
phi1=-0.6610
phi2=-0.2941
mysim=c(diff1[1],diff1[2])
for(i in (1:355))
{
val=phi0+phi1*mysim[i-1]+phi2*mysim[i-2]
mysim=c(mysim,val)
}
mysim=arima.sim(n=357,model=list(order=c(2,1,0),ar=c(phi1,phi2),sd=0))+phi0
plot(years,mysim,type="l")
plot(years[-1][-357],overall[-1][-357],type="l",xlab="Year",ylab="Degrees Celcius",main="Temperature Data with AR(1)")
lines(years,mysim,col=2)
#Trying to get this to work
fit=Arima(overall,order=c(2,1,0))
plot(years[-1][-357],overall[-1][-357],type="l",xlab="Year",ylab="Degrees Celcius",main="Temperature Data with AR(2) Fit")
lines(years[-1][-357],fitted(fit)[-1][-357],col="red")
#Prediction for Model 1
model1=arima(overall,order=c(0,1,2))
last_years=tail(c(years[-1],(2017:2030)),30)
last_temps=tail(c(overall[-1][-357],rep(NaN,13)),30)
plot(last_years,last_temps,type="l",ylim=c(4,12),xlab="Year",ylab="Degrees Celcius",main="Temperature Data Forecast to 2030")
forecast1=predict(model1,n.ahead=13)
adj=c(rep(NaN,16),last_temps[17],forecast1$pred)
lines(last_years,adj,col="red",type="o")
adj1=c(rep(NaN,17),forecast1$pred+forecast1$se)
adj2=c(rep(NaN,17),forecast1$pred-forecast1$se)
lines(last_years,adj1, lty="dashed", col=4)
lines(last_years,adj2, lty="dashed", col=4)
require('worldmap')
require('fields')
#setwd('C:/Users/samjb/Desktop/Nonparametric/Final Project')
station_data=read.csv('master-location-identifier-database-20130801.csv',header=TRUE)
aus_data_na=station_data[station_data$country3=="AUS",]
aus_data=aus_data_na[is.na(aus_data_na$lon_prp)+is.na(aus_data_na$lon_prp)==0,]
aus_means=read.table('meanann.txt')
xgrid=seq(110,155,length=1361)
ygrid=seq(-40,-10,length=1681)
latlongs=matrix(0,1361,1681)
n=length(aus_data$country3)
stations=data.frame(lat=rep(0,n),long=rep(0,n),temperature=rep(0,n))
for(ii in 1:n)
{
stations$lat[ii]=aus_data$lat_prp[ii]
stations$long[ii]=aus_data$lon_prp[ii]
}
xlims=c(111.2,154.8)
ylims=c(-40.4,-8.6)
stations=stations[stations$lat>ylims[1] & stations$lat<ylims[2],]
stations=stations[stations$long>xlims[1] & stations$long<xlims[2],]
require('worldmap')
require('fields')
#setwd('C:/Users/samjb/Desktop/Nonparametric/Final Project')
station_data=read.csv('master-location-identifier-database-20130801.csv',header=TRUE)
aus_data_na=station_data[station_data$country3=="AUS",]
aus_data=aus_data_na[is.na(aus_data_na$lon_prp)+is.na(aus_data_na$lon_prp)==0,]
aus_means=read.table('meanann.txt')
xgrid=seq(110,155,length=1361)
ygrid=seq(-40,-10,length=1681)
latlongs=matrix(0,1361,1681)
n=length(aus_data$country3)
stations=data.frame(lat=rep(0,n),long=rep(0,n),temperature=rep(0,n))
for(ii in 1:n)
{
stations$lat[ii]=aus_data$lat_prp[ii]
stations$long[ii]=aus_data$lon_prp[ii]
}
